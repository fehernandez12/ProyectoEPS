#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Logica
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CasoEstudio")]
	public partial class OrmEpsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertadministrador(administrador instance);
    partial void Updateadministrador(administrador instance);
    partial void Deleteadministrador(administrador instance);
    partial void Insertcentro_medico(centro_medico instance);
    partial void Updatecentro_medico(centro_medico instance);
    partial void Deletecentro_medico(centro_medico instance);
    partial void Insertcentro_medico_has_especialidad(centro_medico_has_especialidad instance);
    partial void Updatecentro_medico_has_especialidad(centro_medico_has_especialidad instance);
    partial void Deletecentro_medico_has_especialidad(centro_medico_has_especialidad instance);
    partial void Inserteps(eps instance);
    partial void Updateeps(eps instance);
    partial void Deleteeps(eps instance);
    partial void Insertespecialidad(especialidad instance);
    partial void Updateespecialidad(especialidad instance);
    partial void Deleteespecialidad(especialidad instance);
    partial void Insertestado_eps(estado_eps instance);
    partial void Updateestado_eps(estado_eps instance);
    partial void Deleteestado_eps(estado_eps instance);
    partial void Inserthora_apertura(hora_apertura instance);
    partial void Updatehora_apertura(hora_apertura instance);
    partial void Deletehora_apertura(hora_apertura instance);
    partial void Inserthora_cierre(hora_cierre instance);
    partial void Updatehora_cierre(hora_cierre instance);
    partial void Deletehora_cierre(hora_cierre instance);
    partial void InsertNivel_atencin(Nivel_atencin instance);
    partial void UpdateNivel_atencin(Nivel_atencin instance);
    partial void DeleteNivel_atencin(Nivel_atencin instance);
    partial void Insertpermisos(permisos instance);
    partial void Updatepermisos(permisos instance);
    partial void Deletepermisos(permisos instance);
    partial void Inserttabla_consultas(tabla_consultas instance);
    partial void Updatetabla_consultas(tabla_consultas instance);
    partial void Deletetabla_consultas(tabla_consultas instance);
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    #endregion
		
		public OrmEpsDataContext() : 
				base(global::Logica.Properties.Settings.Default.CasoEstudioConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public OrmEpsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrmEpsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrmEpsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrmEpsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<administrador> administrador
		{
			get
			{
				return this.GetTable<administrador>();
			}
		}
		
		public System.Data.Linq.Table<usuario_has_permisos> usuario_has_permisos
		{
			get
			{
				return this.GetTable<usuario_has_permisos>();
			}
		}
		
		public System.Data.Linq.Table<centro_medico> centro_medico
		{
			get
			{
				return this.GetTable<centro_medico>();
			}
		}
		
		public System.Data.Linq.Table<centro_medico_has_especialidad> centro_medico_has_especialidad
		{
			get
			{
				return this.GetTable<centro_medico_has_especialidad>();
			}
		}
		
		public System.Data.Linq.Table<eps> eps
		{
			get
			{
				return this.GetTable<eps>();
			}
		}
		
		public System.Data.Linq.Table<especialidad> especialidad
		{
			get
			{
				return this.GetTable<especialidad>();
			}
		}
		
		public System.Data.Linq.Table<estado_eps> estado_eps
		{
			get
			{
				return this.GetTable<estado_eps>();
			}
		}
		
		public System.Data.Linq.Table<hora_apertura> hora_apertura
		{
			get
			{
				return this.GetTable<hora_apertura>();
			}
		}
		
		public System.Data.Linq.Table<hora_cierre> hora_cierre
		{
			get
			{
				return this.GetTable<hora_cierre>();
			}
		}
		
		public System.Data.Linq.Table<Nivel_atencin> Nivel_atencin
		{
			get
			{
				return this.GetTable<Nivel_atencin>();
			}
		}
		
		public System.Data.Linq.Table<permisos> permisos
		{
			get
			{
				return this.GetTable<permisos>();
			}
		}
		
		public System.Data.Linq.Table<tabla_consultas> tabla_consultas
		{
			get
			{
				return this.GetTable<tabla_consultas>();
			}
		}
		
		public System.Data.Linq.Table<usuario> usuario
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
		
		public System.Data.Linq.Table<usuario_has_centro_medico> usuario_has_centro_medico
		{
			get
			{
				return this.GetTable<usuario_has_centro_medico>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_login_admin")]
		public ISingleResult<sp_login_adminResult> sp_login_admin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cedula, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cedula, password);
			return ((ISingleResult<sp_login_adminResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_login_usuario")]
		public ISingleResult<sp_login_usuarioResult> sp_login_usuario([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cedula)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cedula);
			return ((ISingleResult<sp_login_usuarioResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_login_eps")]
		public ISingleResult<sp_login_epsResult> sp_login_eps([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string nit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nit, password);
			return ((ISingleResult<sp_login_epsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.administrador")]
	public partial class administrador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAdministrador;
		
		private string _password;
		
		private int _usuario_cedula;
		
		private EntityRef<usuario> _usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAdministradorChanging(int value);
    partial void OnidAdministradorChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onusuario_cedulaChanging(int value);
    partial void Onusuario_cedulaChanged();
    #endregion
		
		public administrador()
		{
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdministrador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAdministrador
		{
			get
			{
				return this._idAdministrador;
			}
			set
			{
				if ((this._idAdministrador != value))
				{
					this.OnidAdministradorChanging(value);
					this.SendPropertyChanging();
					this._idAdministrador = value;
					this.SendPropertyChanged("idAdministrador");
					this.OnidAdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario_cedula", DbType="Int NOT NULL")]
		public int usuario_cedula
		{
			get
			{
				return this._usuario_cedula;
			}
			set
			{
				if ((this._usuario_cedula != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusuario_cedulaChanging(value);
					this.SendPropertyChanging();
					this._usuario_cedula = value;
					this.SendPropertyChanged("usuario_cedula");
					this.Onusuario_cedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_administrador", Storage="_usuario", ThisKey="usuario_cedula", OtherKey="cedula", IsForeignKey=true)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.administrador.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.administrador.Add(this);
						this._usuario_cedula = value.cedula;
					}
					else
					{
						this._usuario_cedula = default(int);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuario_has_permisos")]
	public partial class usuario_has_permisos
	{
		
		private int _usuario_cedula;
		
		private int _permisos_idPermisos;
		
		private int _id;
		
		public usuario_has_permisos()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario_cedula", DbType="Int NOT NULL")]
		public int usuario_cedula
		{
			get
			{
				return this._usuario_cedula;
			}
			set
			{
				if ((this._usuario_cedula != value))
				{
					this._usuario_cedula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permisos_idPermisos", DbType="Int NOT NULL")]
		public int permisos_idPermisos
		{
			get
			{
				return this._permisos_idPermisos;
			}
			set
			{
				if ((this._permisos_idPermisos != value))
				{
					this._permisos_idPermisos = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.centro_medico")]
	public partial class centro_medico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCentro_medico;
		
		private string _nombre;
		
		private string _direccion;
		
		private string _telefonos;
		
		private string _foto;
		
		private int _nivel_atencion_idNivel_atencion;
		
		private int _eps_idEps;
		
		private System.TimeSpan _hora_apertura_idHora_apertura;
		
		private System.TimeSpan _hora_cierre_idHora_cierre;
		
		private EntitySet<centro_medico_has_especialidad> _centro_medico_has_especialidad;
		
		private EntitySet<tabla_consultas> _tabla_consultas;
		
		private EntityRef<eps> _eps;
		
		private EntityRef<hora_apertura> _hora_apertura;
		
		private EntityRef<hora_cierre> _hora_cierre;
		
		private EntityRef<Nivel_atencin> _Nivel_atencin;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCentro_medicoChanging(int value);
    partial void OnidCentro_medicoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonosChanging(string value);
    partial void OntelefonosChanged();
    partial void OnfotoChanging(string value);
    partial void OnfotoChanged();
    partial void Onnivel_atencion_idNivel_atencionChanging(int value);
    partial void Onnivel_atencion_idNivel_atencionChanged();
    partial void Oneps_idEpsChanging(int value);
    partial void Oneps_idEpsChanged();
    partial void Onhora_apertura_idHora_aperturaChanging(System.TimeSpan value);
    partial void Onhora_apertura_idHora_aperturaChanged();
    partial void Onhora_cierre_idHora_cierreChanging(System.TimeSpan value);
    partial void Onhora_cierre_idHora_cierreChanged();
    #endregion
		
		public centro_medico()
		{
			this._centro_medico_has_especialidad = new EntitySet<centro_medico_has_especialidad>(new Action<centro_medico_has_especialidad>(this.attach_centro_medico_has_especialidad), new Action<centro_medico_has_especialidad>(this.detach_centro_medico_has_especialidad));
			this._tabla_consultas = new EntitySet<tabla_consultas>(new Action<tabla_consultas>(this.attach_tabla_consultas), new Action<tabla_consultas>(this.detach_tabla_consultas));
			this._eps = default(EntityRef<eps>);
			this._hora_apertura = default(EntityRef<hora_apertura>);
			this._hora_cierre = default(EntityRef<hora_cierre>);
			this._Nivel_atencin = default(EntityRef<Nivel_atencin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCentro_medico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCentro_medico
		{
			get
			{
				return this._idCentro_medico;
			}
			set
			{
				if ((this._idCentro_medico != value))
				{
					if ((((this._eps.HasLoadedOrAssignedValue || this._hora_apertura.HasLoadedOrAssignedValue) 
								|| this._hora_cierre.HasLoadedOrAssignedValue) 
								|| this._Nivel_atencin.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCentro_medicoChanging(value);
					this.SendPropertyChanging();
					this._idCentro_medico = value;
					this.SendPropertyChanged("idCentro_medico");
					this.OnidCentro_medicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefonos", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telefonos
		{
			get
			{
				return this._telefonos;
			}
			set
			{
				if ((this._telefonos != value))
				{
					this.OntelefonosChanging(value);
					this.SendPropertyChanging();
					this._telefonos = value;
					this.SendPropertyChanged("telefonos");
					this.OntelefonosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foto", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string foto
		{
			get
			{
				return this._foto;
			}
			set
			{
				if ((this._foto != value))
				{
					this.OnfotoChanging(value);
					this.SendPropertyChanging();
					this._foto = value;
					this.SendPropertyChanged("foto");
					this.OnfotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nivel_atencion_idNivel_atencion", DbType="Int NOT NULL")]
		public int nivel_atencion_idNivel_atencion
		{
			get
			{
				return this._nivel_atencion_idNivel_atencion;
			}
			set
			{
				if ((this._nivel_atencion_idNivel_atencion != value))
				{
					this.Onnivel_atencion_idNivel_atencionChanging(value);
					this.SendPropertyChanging();
					this._nivel_atencion_idNivel_atencion = value;
					this.SendPropertyChanged("nivel_atencion_idNivel_atencion");
					this.Onnivel_atencion_idNivel_atencionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eps_idEps", DbType="Int NOT NULL")]
		public int eps_idEps
		{
			get
			{
				return this._eps_idEps;
			}
			set
			{
				if ((this._eps_idEps != value))
				{
					this.Oneps_idEpsChanging(value);
					this.SendPropertyChanging();
					this._eps_idEps = value;
					this.SendPropertyChanged("eps_idEps");
					this.Oneps_idEpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora_apertura_idHora_apertura", DbType="Time NOT NULL")]
		public System.TimeSpan hora_apertura_idHora_apertura
		{
			get
			{
				return this._hora_apertura_idHora_apertura;
			}
			set
			{
				if ((this._hora_apertura_idHora_apertura != value))
				{
					this.Onhora_apertura_idHora_aperturaChanging(value);
					this.SendPropertyChanging();
					this._hora_apertura_idHora_apertura = value;
					this.SendPropertyChanged("hora_apertura_idHora_apertura");
					this.Onhora_apertura_idHora_aperturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora_cierre_idHora_cierre", DbType="Time NOT NULL")]
		public System.TimeSpan hora_cierre_idHora_cierre
		{
			get
			{
				return this._hora_cierre_idHora_cierre;
			}
			set
			{
				if ((this._hora_cierre_idHora_cierre != value))
				{
					this.Onhora_cierre_idHora_cierreChanging(value);
					this.SendPropertyChanging();
					this._hora_cierre_idHora_cierre = value;
					this.SendPropertyChanged("hora_cierre_idHora_cierre");
					this.Onhora_cierre_idHora_cierreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="centro_medico_centro_medico_has_especialidad", Storage="_centro_medico_has_especialidad", ThisKey="idCentro_medico", OtherKey="centro_medico_idCentro_medico")]
		public EntitySet<centro_medico_has_especialidad> centro_medico_has_especialidad
		{
			get
			{
				return this._centro_medico_has_especialidad;
			}
			set
			{
				this._centro_medico_has_especialidad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="centro_medico_tabla_consultas", Storage="_tabla_consultas", ThisKey="idCentro_medico", OtherKey="centro_medico_idCentro_medico")]
		public EntitySet<tabla_consultas> tabla_consultas
		{
			get
			{
				return this._tabla_consultas;
			}
			set
			{
				this._tabla_consultas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eps_centro_medico", Storage="_eps", ThisKey="idCentro_medico", OtherKey="idEps", IsForeignKey=true)]
		public eps eps
		{
			get
			{
				return this._eps.Entity;
			}
			set
			{
				eps previousValue = this._eps.Entity;
				if (((previousValue != value) 
							|| (this._eps.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eps.Entity = null;
						previousValue.centro_medico = null;
					}
					this._eps.Entity = value;
					if ((value != null))
					{
						value.centro_medico = this;
						this._idCentro_medico = value.idEps;
					}
					else
					{
						this._idCentro_medico = default(int);
					}
					this.SendPropertyChanged("eps");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hora_apertura_centro_medico", Storage="_hora_apertura", ThisKey="idCentro_medico", OtherKey="idHora_apertura", IsForeignKey=true)]
		public hora_apertura hora_apertura
		{
			get
			{
				return this._hora_apertura.Entity;
			}
			set
			{
				hora_apertura previousValue = this._hora_apertura.Entity;
				if (((previousValue != value) 
							|| (this._hora_apertura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hora_apertura.Entity = null;
						previousValue.centro_medico = null;
					}
					this._hora_apertura.Entity = value;
					if ((value != null))
					{
						value.centro_medico = this;
						this._idCentro_medico = value.idHora_apertura;
					}
					else
					{
						this._idCentro_medico = default(int);
					}
					this.SendPropertyChanged("hora_apertura");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hora_cierre_centro_medico", Storage="_hora_cierre", ThisKey="idCentro_medico", OtherKey="idHora_cierre", IsForeignKey=true)]
		public hora_cierre hora_cierre
		{
			get
			{
				return this._hora_cierre.Entity;
			}
			set
			{
				hora_cierre previousValue = this._hora_cierre.Entity;
				if (((previousValue != value) 
							|| (this._hora_cierre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hora_cierre.Entity = null;
						previousValue.centro_medico = null;
					}
					this._hora_cierre.Entity = value;
					if ((value != null))
					{
						value.centro_medico = this;
						this._idCentro_medico = value.idHora_cierre;
					}
					else
					{
						this._idCentro_medico = default(int);
					}
					this.SendPropertyChanged("hora_cierre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nivel_atencin_centro_medico", Storage="_Nivel_atencin", ThisKey="idCentro_medico", OtherKey="idNivel_atencion", IsForeignKey=true)]
		public Nivel_atencin Nivel_atencin
		{
			get
			{
				return this._Nivel_atencin.Entity;
			}
			set
			{
				Nivel_atencin previousValue = this._Nivel_atencin.Entity;
				if (((previousValue != value) 
							|| (this._Nivel_atencin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nivel_atencin.Entity = null;
						previousValue.centro_medico = null;
					}
					this._Nivel_atencin.Entity = value;
					if ((value != null))
					{
						value.centro_medico = this;
						this._idCentro_medico = value.idNivel_atencion;
					}
					else
					{
						this._idCentro_medico = default(int);
					}
					this.SendPropertyChanged("Nivel_atencin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_centro_medico_has_especialidad(centro_medico_has_especialidad entity)
		{
			this.SendPropertyChanging();
			entity.centro_medico = this;
		}
		
		private void detach_centro_medico_has_especialidad(centro_medico_has_especialidad entity)
		{
			this.SendPropertyChanging();
			entity.centro_medico = null;
		}
		
		private void attach_tabla_consultas(tabla_consultas entity)
		{
			this.SendPropertyChanging();
			entity.centro_medico = this;
		}
		
		private void detach_tabla_consultas(tabla_consultas entity)
		{
			this.SendPropertyChanging();
			entity.centro_medico = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.centro_medico_has_especialidad")]
	public partial class centro_medico_has_especialidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _centro_medico_idCentro_medico;
		
		private int _especialidad_idEspecialidad;
		
		private int _id;
		
		private EntityRef<centro_medico> _centro_medico;
		
		private EntityRef<especialidad> _especialidad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncentro_medico_idCentro_medicoChanging(int value);
    partial void Oncentro_medico_idCentro_medicoChanged();
    partial void Onespecialidad_idEspecialidadChanging(int value);
    partial void Onespecialidad_idEspecialidadChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public centro_medico_has_especialidad()
		{
			this._centro_medico = default(EntityRef<centro_medico>);
			this._especialidad = default(EntityRef<especialidad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_centro_medico_idCentro_medico", DbType="Int NOT NULL")]
		public int centro_medico_idCentro_medico
		{
			get
			{
				return this._centro_medico_idCentro_medico;
			}
			set
			{
				if ((this._centro_medico_idCentro_medico != value))
				{
					if (this._centro_medico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncentro_medico_idCentro_medicoChanging(value);
					this.SendPropertyChanging();
					this._centro_medico_idCentro_medico = value;
					this.SendPropertyChanged("centro_medico_idCentro_medico");
					this.Oncentro_medico_idCentro_medicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_especialidad_idEspecialidad", DbType="Int NOT NULL")]
		public int especialidad_idEspecialidad
		{
			get
			{
				return this._especialidad_idEspecialidad;
			}
			set
			{
				if ((this._especialidad_idEspecialidad != value))
				{
					if (this._especialidad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onespecialidad_idEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._especialidad_idEspecialidad = value;
					this.SendPropertyChanged("especialidad_idEspecialidad");
					this.Onespecialidad_idEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="centro_medico_centro_medico_has_especialidad", Storage="_centro_medico", ThisKey="centro_medico_idCentro_medico", OtherKey="idCentro_medico", IsForeignKey=true)]
		public centro_medico centro_medico
		{
			get
			{
				return this._centro_medico.Entity;
			}
			set
			{
				centro_medico previousValue = this._centro_medico.Entity;
				if (((previousValue != value) 
							|| (this._centro_medico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._centro_medico.Entity = null;
						previousValue.centro_medico_has_especialidad.Remove(this);
					}
					this._centro_medico.Entity = value;
					if ((value != null))
					{
						value.centro_medico_has_especialidad.Add(this);
						this._centro_medico_idCentro_medico = value.idCentro_medico;
					}
					else
					{
						this._centro_medico_idCentro_medico = default(int);
					}
					this.SendPropertyChanged("centro_medico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="especialidad_centro_medico_has_especialidad", Storage="_especialidad", ThisKey="especialidad_idEspecialidad", OtherKey="idEspecialidad", IsForeignKey=true)]
		public especialidad especialidad
		{
			get
			{
				return this._especialidad.Entity;
			}
			set
			{
				especialidad previousValue = this._especialidad.Entity;
				if (((previousValue != value) 
							|| (this._especialidad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._especialidad.Entity = null;
						previousValue.centro_medico_has_especialidad.Remove(this);
					}
					this._especialidad.Entity = value;
					if ((value != null))
					{
						value.centro_medico_has_especialidad.Add(this);
						this._especialidad_idEspecialidad = value.idEspecialidad;
					}
					else
					{
						this._especialidad_idEspecialidad = default(int);
					}
					this.SendPropertyChanged("especialidad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.eps")]
	public partial class eps : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEps;
		
		private string _nombre;
		
		private string _nit;
		
		private string _direccion;
		
		private string _telefono;
		
		private string _password;
		
		private int _estado_eps_idEstado_eps;
		
		private EntityRef<centro_medico> _centro_medico;
		
		private EntitySet<usuario> _usuario;
		
		private EntityRef<estado_eps> _estado_eps;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEpsChanging(int value);
    partial void OnidEpsChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnnitChanging(string value);
    partial void OnnitChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onestado_eps_idEstado_epsChanging(int value);
    partial void Onestado_eps_idEstado_epsChanged();
    #endregion
		
		public eps()
		{
			this._centro_medico = default(EntityRef<centro_medico>);
			this._usuario = new EntitySet<usuario>(new Action<usuario>(this.attach_usuario), new Action<usuario>(this.detach_usuario));
			this._estado_eps = default(EntityRef<estado_eps>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEps", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEps
		{
			get
			{
				return this._idEps;
			}
			set
			{
				if ((this._idEps != value))
				{
					if (this._estado_eps.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEpsChanging(value);
					this.SendPropertyChanging();
					this._idEps = value;
					this.SendPropertyChanged("idEps");
					this.OnidEpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nit", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string nit
		{
			get
			{
				return this._nit;
			}
			set
			{
				if ((this._nit != value))
				{
					this.OnnitChanging(value);
					this.SendPropertyChanging();
					this._nit = value;
					this.SendPropertyChanged("nit");
					this.OnnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado_eps_idEstado_eps", DbType="Int NOT NULL")]
		public int estado_eps_idEstado_eps
		{
			get
			{
				return this._estado_eps_idEstado_eps;
			}
			set
			{
				if ((this._estado_eps_idEstado_eps != value))
				{
					this.Onestado_eps_idEstado_epsChanging(value);
					this.SendPropertyChanging();
					this._estado_eps_idEstado_eps = value;
					this.SendPropertyChanged("estado_eps_idEstado_eps");
					this.Onestado_eps_idEstado_epsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eps_centro_medico", Storage="_centro_medico", ThisKey="idEps", OtherKey="idCentro_medico", IsUnique=true, IsForeignKey=false)]
		public centro_medico centro_medico
		{
			get
			{
				return this._centro_medico.Entity;
			}
			set
			{
				centro_medico previousValue = this._centro_medico.Entity;
				if (((previousValue != value) 
							|| (this._centro_medico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._centro_medico.Entity = null;
						previousValue.eps = null;
					}
					this._centro_medico.Entity = value;
					if ((value != null))
					{
						value.eps = this;
					}
					this.SendPropertyChanged("centro_medico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eps_usuario", Storage="_usuario", ThisKey="idEps", OtherKey="idEps")]
		public EntitySet<usuario> usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				this._usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_eps_eps", Storage="_estado_eps", ThisKey="idEps", OtherKey="idEstado_eps", IsForeignKey=true)]
		public estado_eps estado_eps
		{
			get
			{
				return this._estado_eps.Entity;
			}
			set
			{
				estado_eps previousValue = this._estado_eps.Entity;
				if (((previousValue != value) 
							|| (this._estado_eps.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estado_eps.Entity = null;
						previousValue.eps = null;
					}
					this._estado_eps.Entity = value;
					if ((value != null))
					{
						value.eps = this;
						this._idEps = value.idEstado_eps;
					}
					else
					{
						this._idEps = default(int);
					}
					this.SendPropertyChanged("estado_eps");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_usuario(usuario entity)
		{
			this.SendPropertyChanging();
			entity.eps = this;
		}
		
		private void detach_usuario(usuario entity)
		{
			this.SendPropertyChanging();
			entity.eps = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.especialidad")]
	public partial class especialidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEspecialidad;
		
		private string _nombre;
		
		private System.Nullable<int> _especialidad_idEspecialidad;
		
		private EntitySet<centro_medico_has_especialidad> _centro_medico_has_especialidad;
		
		private EntityRef<especialidad> _especialidad2;
		
		private EntityRef<especialidad> _especialidad1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEspecialidadChanging(int value);
    partial void OnidEspecialidadChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void Onespecialidad_idEspecialidadChanging(System.Nullable<int> value);
    partial void Onespecialidad_idEspecialidadChanged();
    #endregion
		
		public especialidad()
		{
			this._centro_medico_has_especialidad = new EntitySet<centro_medico_has_especialidad>(new Action<centro_medico_has_especialidad>(this.attach_centro_medico_has_especialidad), new Action<centro_medico_has_especialidad>(this.detach_centro_medico_has_especialidad));
			this._especialidad2 = default(EntityRef<especialidad>);
			this._especialidad1 = default(EntityRef<especialidad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEspecialidad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEspecialidad
		{
			get
			{
				return this._idEspecialidad;
			}
			set
			{
				if ((this._idEspecialidad != value))
				{
					if (this._especialidad1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._idEspecialidad = value;
					this.SendPropertyChanged("idEspecialidad");
					this.OnidEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_especialidad_idEspecialidad", DbType="Int")]
		public System.Nullable<int> especialidad_idEspecialidad
		{
			get
			{
				return this._especialidad_idEspecialidad;
			}
			set
			{
				if ((this._especialidad_idEspecialidad != value))
				{
					this.Onespecialidad_idEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._especialidad_idEspecialidad = value;
					this.SendPropertyChanged("especialidad_idEspecialidad");
					this.Onespecialidad_idEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="especialidad_centro_medico_has_especialidad", Storage="_centro_medico_has_especialidad", ThisKey="idEspecialidad", OtherKey="especialidad_idEspecialidad")]
		public EntitySet<centro_medico_has_especialidad> centro_medico_has_especialidad
		{
			get
			{
				return this._centro_medico_has_especialidad;
			}
			set
			{
				this._centro_medico_has_especialidad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="especialidad_especialidad", Storage="_especialidad2", ThisKey="idEspecialidad", OtherKey="idEspecialidad", IsUnique=true, IsForeignKey=false)]
		public especialidad especialidad2
		{
			get
			{
				return this._especialidad2.Entity;
			}
			set
			{
				especialidad previousValue = this._especialidad2.Entity;
				if (((previousValue != value) 
							|| (this._especialidad2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._especialidad2.Entity = null;
						previousValue.especialidad1 = null;
					}
					this._especialidad2.Entity = value;
					if ((value != null))
					{
						value.especialidad1 = this;
					}
					this.SendPropertyChanged("especialidad2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="especialidad_especialidad", Storage="_especialidad1", ThisKey="idEspecialidad", OtherKey="idEspecialidad", IsForeignKey=true)]
		public especialidad especialidad1
		{
			get
			{
				return this._especialidad1.Entity;
			}
			set
			{
				especialidad previousValue = this._especialidad1.Entity;
				if (((previousValue != value) 
							|| (this._especialidad1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._especialidad1.Entity = null;
						previousValue.especialidad2 = null;
					}
					this._especialidad1.Entity = value;
					if ((value != null))
					{
						value.especialidad2 = this;
						this._idEspecialidad = value.idEspecialidad;
					}
					else
					{
						this._idEspecialidad = default(int);
					}
					this.SendPropertyChanged("especialidad1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_centro_medico_has_especialidad(centro_medico_has_especialidad entity)
		{
			this.SendPropertyChanging();
			entity.especialidad = this;
		}
		
		private void detach_centro_medico_has_especialidad(centro_medico_has_especialidad entity)
		{
			this.SendPropertyChanging();
			entity.especialidad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.estado_eps")]
	public partial class estado_eps : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEstado_eps;
		
		private string _estado_eps1;
		
		private EntityRef<eps> _eps;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEstado_epsChanging(int value);
    partial void OnidEstado_epsChanged();
    partial void Onestado_eps1Changing(string value);
    partial void Onestado_eps1Changed();
    #endregion
		
		public estado_eps()
		{
			this._eps = default(EntityRef<eps>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado_eps", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEstado_eps
		{
			get
			{
				return this._idEstado_eps;
			}
			set
			{
				if ((this._idEstado_eps != value))
				{
					this.OnidEstado_epsChanging(value);
					this.SendPropertyChanging();
					this._idEstado_eps = value;
					this.SendPropertyChanged("idEstado_eps");
					this.OnidEstado_epsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="estado_eps", Storage="_estado_eps1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string estado_eps1
		{
			get
			{
				return this._estado_eps1;
			}
			set
			{
				if ((this._estado_eps1 != value))
				{
					this.Onestado_eps1Changing(value);
					this.SendPropertyChanging();
					this._estado_eps1 = value;
					this.SendPropertyChanged("estado_eps1");
					this.Onestado_eps1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_eps_eps", Storage="_eps", ThisKey="idEstado_eps", OtherKey="idEps", IsUnique=true, IsForeignKey=false)]
		public eps eps
		{
			get
			{
				return this._eps.Entity;
			}
			set
			{
				eps previousValue = this._eps.Entity;
				if (((previousValue != value) 
							|| (this._eps.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eps.Entity = null;
						previousValue.estado_eps = null;
					}
					this._eps.Entity = value;
					if ((value != null))
					{
						value.estado_eps = this;
					}
					this.SendPropertyChanged("eps");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hora_apertura")]
	public partial class hora_apertura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idHora_apertura;
		
		private System.TimeSpan _hora_apertura1;
		
		private EntityRef<centro_medico> _centro_medico;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidHora_aperturaChanging(int value);
    partial void OnidHora_aperturaChanged();
    partial void Onhora_apertura1Changing(System.TimeSpan value);
    partial void Onhora_apertura1Changed();
    #endregion
		
		public hora_apertura()
		{
			this._centro_medico = default(EntityRef<centro_medico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHora_apertura", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idHora_apertura
		{
			get
			{
				return this._idHora_apertura;
			}
			set
			{
				if ((this._idHora_apertura != value))
				{
					this.OnidHora_aperturaChanging(value);
					this.SendPropertyChanging();
					this._idHora_apertura = value;
					this.SendPropertyChanged("idHora_apertura");
					this.OnidHora_aperturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hora_apertura", Storage="_hora_apertura1", DbType="Time NOT NULL")]
		public System.TimeSpan hora_apertura1
		{
			get
			{
				return this._hora_apertura1;
			}
			set
			{
				if ((this._hora_apertura1 != value))
				{
					this.Onhora_apertura1Changing(value);
					this.SendPropertyChanging();
					this._hora_apertura1 = value;
					this.SendPropertyChanged("hora_apertura1");
					this.Onhora_apertura1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hora_apertura_centro_medico", Storage="_centro_medico", ThisKey="idHora_apertura", OtherKey="idCentro_medico", IsUnique=true, IsForeignKey=false)]
		public centro_medico centro_medico
		{
			get
			{
				return this._centro_medico.Entity;
			}
			set
			{
				centro_medico previousValue = this._centro_medico.Entity;
				if (((previousValue != value) 
							|| (this._centro_medico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._centro_medico.Entity = null;
						previousValue.hora_apertura = null;
					}
					this._centro_medico.Entity = value;
					if ((value != null))
					{
						value.hora_apertura = this;
					}
					this.SendPropertyChanged("centro_medico");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hora_cierre")]
	public partial class hora_cierre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idHora_cierre;
		
		private System.TimeSpan _hora_cierre1;
		
		private EntityRef<centro_medico> _centro_medico;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidHora_cierreChanging(int value);
    partial void OnidHora_cierreChanged();
    partial void Onhora_cierre1Changing(System.TimeSpan value);
    partial void Onhora_cierre1Changed();
    #endregion
		
		public hora_cierre()
		{
			this._centro_medico = default(EntityRef<centro_medico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHora_cierre", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idHora_cierre
		{
			get
			{
				return this._idHora_cierre;
			}
			set
			{
				if ((this._idHora_cierre != value))
				{
					this.OnidHora_cierreChanging(value);
					this.SendPropertyChanging();
					this._idHora_cierre = value;
					this.SendPropertyChanged("idHora_cierre");
					this.OnidHora_cierreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hora_cierre", Storage="_hora_cierre1", DbType="Time NOT NULL")]
		public System.TimeSpan hora_cierre1
		{
			get
			{
				return this._hora_cierre1;
			}
			set
			{
				if ((this._hora_cierre1 != value))
				{
					this.Onhora_cierre1Changing(value);
					this.SendPropertyChanging();
					this._hora_cierre1 = value;
					this.SendPropertyChanged("hora_cierre1");
					this.Onhora_cierre1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hora_cierre_centro_medico", Storage="_centro_medico", ThisKey="idHora_cierre", OtherKey="idCentro_medico", IsUnique=true, IsForeignKey=false)]
		public centro_medico centro_medico
		{
			get
			{
				return this._centro_medico.Entity;
			}
			set
			{
				centro_medico previousValue = this._centro_medico.Entity;
				if (((previousValue != value) 
							|| (this._centro_medico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._centro_medico.Entity = null;
						previousValue.hora_cierre = null;
					}
					this._centro_medico.Entity = value;
					if ((value != null))
					{
						value.hora_cierre = this;
					}
					this.SendPropertyChanged("centro_medico");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nivel_atencin")]
	public partial class Nivel_atencin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNivel_atencion;
		
		private string _nombre;
		
		private EntityRef<centro_medico> _centro_medico;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNivel_atencionChanging(int value);
    partial void OnidNivel_atencionChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Nivel_atencin()
		{
			this._centro_medico = default(EntityRef<centro_medico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNivel_atencion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNivel_atencion
		{
			get
			{
				return this._idNivel_atencion;
			}
			set
			{
				if ((this._idNivel_atencion != value))
				{
					this.OnidNivel_atencionChanging(value);
					this.SendPropertyChanging();
					this._idNivel_atencion = value;
					this.SendPropertyChanged("idNivel_atencion");
					this.OnidNivel_atencionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nivel_atencin_centro_medico", Storage="_centro_medico", ThisKey="idNivel_atencion", OtherKey="idCentro_medico", IsUnique=true, IsForeignKey=false)]
		public centro_medico centro_medico
		{
			get
			{
				return this._centro_medico.Entity;
			}
			set
			{
				centro_medico previousValue = this._centro_medico.Entity;
				if (((previousValue != value) 
							|| (this._centro_medico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._centro_medico.Entity = null;
						previousValue.Nivel_atencin = null;
					}
					this._centro_medico.Entity = value;
					if ((value != null))
					{
						value.Nivel_atencin = this;
					}
					this.SendPropertyChanged("centro_medico");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.permisos")]
	public partial class permisos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPermisos;
		
		private string _url;
		
		private int _permiso_padre;
		
		private EntityRef<permisos> _permisos2;
		
		private EntityRef<permisos> _permisos1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPermisosChanging(int value);
    partial void OnidPermisosChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void Onpermiso_padreChanging(int value);
    partial void Onpermiso_padreChanged();
    #endregion
		
		public permisos()
		{
			this._permisos2 = default(EntityRef<permisos>);
			this._permisos1 = default(EntityRef<permisos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPermisos", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPermisos
		{
			get
			{
				return this._idPermisos;
			}
			set
			{
				if ((this._idPermisos != value))
				{
					if (this._permisos1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPermisosChanging(value);
					this.SendPropertyChanging();
					this._idPermisos = value;
					this.SendPropertyChanged("idPermisos");
					this.OnidPermisosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permiso_padre", DbType="Int NOT NULL")]
		public int permiso_padre
		{
			get
			{
				return this._permiso_padre;
			}
			set
			{
				if ((this._permiso_padre != value))
				{
					this.Onpermiso_padreChanging(value);
					this.SendPropertyChanging();
					this._permiso_padre = value;
					this.SendPropertyChanged("permiso_padre");
					this.Onpermiso_padreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permisos_permisos", Storage="_permisos2", ThisKey="idPermisos", OtherKey="idPermisos", IsUnique=true, IsForeignKey=false)]
		public permisos permisos2
		{
			get
			{
				return this._permisos2.Entity;
			}
			set
			{
				permisos previousValue = this._permisos2.Entity;
				if (((previousValue != value) 
							|| (this._permisos2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._permisos2.Entity = null;
						previousValue.permisos1 = null;
					}
					this._permisos2.Entity = value;
					if ((value != null))
					{
						value.permisos1 = this;
					}
					this.SendPropertyChanged("permisos2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permisos_permisos", Storage="_permisos1", ThisKey="idPermisos", OtherKey="idPermisos", IsForeignKey=true)]
		public permisos permisos1
		{
			get
			{
				return this._permisos1.Entity;
			}
			set
			{
				permisos previousValue = this._permisos1.Entity;
				if (((previousValue != value) 
							|| (this._permisos1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._permisos1.Entity = null;
						previousValue.permisos2 = null;
					}
					this._permisos1.Entity = value;
					if ((value != null))
					{
						value.permisos2 = this;
						this._idPermisos = value.idPermisos;
					}
					else
					{
						this._idPermisos = default(int);
					}
					this.SendPropertyChanged("permisos1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tabla_consultas")]
	public partial class tabla_consultas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _usuario_cedula;
		
		private int _centro_medico_idCentro_medico;
		
		private string _consulta;
		
		private int _id;
		
		private EntityRef<centro_medico> _centro_medico;
		
		private EntityRef<usuario> _usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onusuario_cedulaChanging(int value);
    partial void Onusuario_cedulaChanged();
    partial void Oncentro_medico_idCentro_medicoChanging(int value);
    partial void Oncentro_medico_idCentro_medicoChanged();
    partial void OnconsultaChanging(string value);
    partial void OnconsultaChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public tabla_consultas()
		{
			this._centro_medico = default(EntityRef<centro_medico>);
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario_cedula", DbType="Int NOT NULL")]
		public int usuario_cedula
		{
			get
			{
				return this._usuario_cedula;
			}
			set
			{
				if ((this._usuario_cedula != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusuario_cedulaChanging(value);
					this.SendPropertyChanging();
					this._usuario_cedula = value;
					this.SendPropertyChanged("usuario_cedula");
					this.Onusuario_cedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_centro_medico_idCentro_medico", DbType="Int NOT NULL")]
		public int centro_medico_idCentro_medico
		{
			get
			{
				return this._centro_medico_idCentro_medico;
			}
			set
			{
				if ((this._centro_medico_idCentro_medico != value))
				{
					if (this._centro_medico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncentro_medico_idCentro_medicoChanging(value);
					this.SendPropertyChanging();
					this._centro_medico_idCentro_medico = value;
					this.SendPropertyChanged("centro_medico_idCentro_medico");
					this.Oncentro_medico_idCentro_medicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_consulta", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string consulta
		{
			get
			{
				return this._consulta;
			}
			set
			{
				if ((this._consulta != value))
				{
					this.OnconsultaChanging(value);
					this.SendPropertyChanging();
					this._consulta = value;
					this.SendPropertyChanged("consulta");
					this.OnconsultaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="centro_medico_tabla_consultas", Storage="_centro_medico", ThisKey="centro_medico_idCentro_medico", OtherKey="idCentro_medico", IsForeignKey=true)]
		public centro_medico centro_medico
		{
			get
			{
				return this._centro_medico.Entity;
			}
			set
			{
				centro_medico previousValue = this._centro_medico.Entity;
				if (((previousValue != value) 
							|| (this._centro_medico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._centro_medico.Entity = null;
						previousValue.tabla_consultas.Remove(this);
					}
					this._centro_medico.Entity = value;
					if ((value != null))
					{
						value.tabla_consultas.Add(this);
						this._centro_medico_idCentro_medico = value.idCentro_medico;
					}
					else
					{
						this._centro_medico_idCentro_medico = default(int);
					}
					this.SendPropertyChanged("centro_medico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_tabla_consultas", Storage="_usuario", ThisKey="usuario_cedula", OtherKey="cedula", IsForeignKey=true)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.tabla_consultas.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.tabla_consultas.Add(this);
						this._usuario_cedula = value.cedula;
					}
					else
					{
						this._usuario_cedula = default(int);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuario")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cedula;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _direccion;
		
		private string _telefono;
		
		private string _email;
		
		private System.Nullable<int> _idEps;
		
		private EntitySet<administrador> _administrador;
		
		private EntitySet<tabla_consultas> _tabla_consultas;
		
		private EntityRef<eps> _eps;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncedulaChanging(int value);
    partial void OncedulaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnidEpsChanging(System.Nullable<int> value);
    partial void OnidEpsChanged();
    #endregion
		
		public usuario()
		{
			this._administrador = new EntitySet<administrador>(new Action<administrador>(this.attach_administrador), new Action<administrador>(this.detach_administrador));
			this._tabla_consultas = new EntitySet<tabla_consultas>(new Action<tabla_consultas>(this.attach_tabla_consultas), new Action<tabla_consultas>(this.detach_tabla_consultas));
			this._eps = default(EntityRef<eps>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this.OncedulaChanging(value);
					this.SendPropertyChanging();
					this._cedula = value;
					this.SendPropertyChanged("cedula");
					this.OncedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEps", DbType="Int")]
		public System.Nullable<int> idEps
		{
			get
			{
				return this._idEps;
			}
			set
			{
				if ((this._idEps != value))
				{
					if (this._eps.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEpsChanging(value);
					this.SendPropertyChanging();
					this._idEps = value;
					this.SendPropertyChanged("idEps");
					this.OnidEpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_administrador", Storage="_administrador", ThisKey="cedula", OtherKey="usuario_cedula")]
		public EntitySet<administrador> administrador
		{
			get
			{
				return this._administrador;
			}
			set
			{
				this._administrador.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_tabla_consultas", Storage="_tabla_consultas", ThisKey="cedula", OtherKey="usuario_cedula")]
		public EntitySet<tabla_consultas> tabla_consultas
		{
			get
			{
				return this._tabla_consultas;
			}
			set
			{
				this._tabla_consultas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eps_usuario", Storage="_eps", ThisKey="idEps", OtherKey="idEps", IsForeignKey=true)]
		public eps eps
		{
			get
			{
				return this._eps.Entity;
			}
			set
			{
				eps previousValue = this._eps.Entity;
				if (((previousValue != value) 
							|| (this._eps.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eps.Entity = null;
						previousValue.usuario.Remove(this);
					}
					this._eps.Entity = value;
					if ((value != null))
					{
						value.usuario.Add(this);
						this._idEps = value.idEps;
					}
					else
					{
						this._idEps = default(Nullable<int>);
					}
					this.SendPropertyChanged("eps");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_administrador(administrador entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_administrador(administrador entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
		
		private void attach_tabla_consultas(tabla_consultas entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_tabla_consultas(tabla_consultas entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuario_has_centro_medico")]
	public partial class usuario_has_centro_medico
	{
		
		private int _usuario_cedula;
		
		private int _centro_medico_idCentro_medico;
		
		private int _calificacion;
		
		private int _id;
		
		public usuario_has_centro_medico()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario_cedula", DbType="Int NOT NULL")]
		public int usuario_cedula
		{
			get
			{
				return this._usuario_cedula;
			}
			set
			{
				if ((this._usuario_cedula != value))
				{
					this._usuario_cedula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_centro_medico_idCentro_medico", DbType="Int NOT NULL")]
		public int centro_medico_idCentro_medico
		{
			get
			{
				return this._centro_medico_idCentro_medico;
			}
			set
			{
				if ((this._centro_medico_idCentro_medico != value))
				{
					this._centro_medico_idCentro_medico = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calificacion", DbType="Int NOT NULL")]
		public int calificacion
		{
			get
			{
				return this._calificacion;
			}
			set
			{
				if ((this._calificacion != value))
				{
					this._calificacion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class sp_login_adminResult
	{
		
		private int _idAdministrador;
		
		private string _password;
		
		private int _usuario_cedula;
		
		public sp_login_adminResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdministrador", DbType="Int NOT NULL")]
		public int idAdministrador
		{
			get
			{
				return this._idAdministrador;
			}
			set
			{
				if ((this._idAdministrador != value))
				{
					this._idAdministrador = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario_cedula", DbType="Int NOT NULL")]
		public int usuario_cedula
		{
			get
			{
				return this._usuario_cedula;
			}
			set
			{
				if ((this._usuario_cedula != value))
				{
					this._usuario_cedula = value;
				}
			}
		}
	}
	
	public partial class sp_login_usuarioResult
	{
		
		private int _cedula;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _direccion;
		
		private string _telefono;
		
		private string _email;
		
		private System.Nullable<int> _idEps;
		
		public sp_login_usuarioResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", DbType="Int NOT NULL")]
		public int cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this._cedula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this._nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this._apellido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this._direccion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this._telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEps", DbType="Int")]
		public System.Nullable<int> idEps
		{
			get
			{
				return this._idEps;
			}
			set
			{
				if ((this._idEps != value))
				{
					this._idEps = value;
				}
			}
		}
	}
	
	public partial class sp_login_epsResult
	{
		
		private int _idEps;
		
		private string _nombre;
		
		private string _nit;
		
		private string _direccion;
		
		private string _telefono;
		
		private string _password;
		
		private int _estado_eps_idEstado_eps;
		
		public sp_login_epsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEps", DbType="Int NOT NULL")]
		public int idEps
		{
			get
			{
				return this._idEps;
			}
			set
			{
				if ((this._idEps != value))
				{
					this._idEps = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this._nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nit", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string nit
		{
			get
			{
				return this._nit;
			}
			set
			{
				if ((this._nit != value))
				{
					this._nit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this._direccion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this._telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado_eps_idEstado_eps", DbType="Int NOT NULL")]
		public int estado_eps_idEstado_eps
		{
			get
			{
				return this._estado_eps_idEstado_eps;
			}
			set
			{
				if ((this._estado_eps_idEstado_eps != value))
				{
					this._estado_eps_idEstado_eps = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
